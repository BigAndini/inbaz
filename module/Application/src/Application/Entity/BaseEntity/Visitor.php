<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2015-09-26 01:29:08.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace Application\Entity\BaseEntity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Application\Entity\BaseEntity\Visitor
 *
 * @ORM\MappedSuperclass()
 * @ORM\Table(name="visitor")
 */
class Visitor
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     */
    protected $id;

    /**
     * @ORM\Column(type="text")
     */
    protected $ip;

    /**
     * @ORM\Column(type="text")
     */
    protected $dns;

    /**
     * @ORM\Column(type="text")
     */
    protected $browser;

    public function __construct()
    {
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \Application\Entity\BaseEntity\Visitor
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of ip.
     *
     * @param string $ip
     * @return \Application\Entity\BaseEntity\Visitor
     */
    public function setIp($ip)
    {
        $this->ip = $ip;

        return $this;
    }

    /**
     * Get the value of ip.
     *
     * @return string
     */
    public function getIp()
    {
        return $this->ip;
    }

    /**
     * Set the value of dns.
     *
     * @param string $dns
     * @return \Application\Entity\BaseEntity\Visitor
     */
    public function setDns($dns)
    {
        $this->dns = $dns;

        return $this;
    }

    /**
     * Get the value of dns.
     *
     * @return string
     */
    public function getDns()
    {
        return $this->dns;
    }

    /**
     * Set the value of browser.
     *
     * @param string $browser
     * @return \Application\Entity\BaseEntity\Visitor
     */
    public function setBrowser($browser)
    {
        $this->browser = $browser;

        return $this;
    }

    /**
     * Get the value of browser.
     *
     * @return string
     */
    public function getBrowser()
    {
        return $this->browser;
    }

    public function __sleep()
    {
        return array('id', 'ip', 'dns', 'browser');
    }
}